name: MicroPython CI

on: [push]

jobs:
  style:
    name: style ${{ matrix.os }} (py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.os }} ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install micropython
        run: sudo apt-get install -y micropython
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -Ur requirements_test.txt
      - name: Check PyCodeStyle
        run: |
          pycodestyle --statistics --count .
      - name: Check PyDocStyle
        run: |
          pydocstyle --count .
#      - name: Check interrogate
#        run: |
#          interrogate -c pyproject.toml -vv
      - name: Check PyLint
        run: |
          pylint . || echo $(($? % 4))
      - name: Check flake8
        run: |
          flake8 . --select=E9,F63,F7,F82 --show-source
          flake8 . --exit-zero --ignore=E501
#      - name: Check MANIFEST
#        run: |
#          check-manifest -q || echo $(($? -1))
  test:
    name: test ${{ matrix.os }} (py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.os }} ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install micropython
        run: sudo apt-get install -y micropython
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -Ur requirements_test.txt
#      - name: Test with pytest
#        run: |
#          python -m pytest --random -q --disable-warnings -m "not dcsbios"
#      - name: Upload pytest test results
#        uses: actions/upload-artifact@v3
#        if: failure()
#        with:
#          name: pytest-${{ matrix.os }}-${{ matrix.python-version }}
#          path: |
#            some.log
#          retention-days: 5
      - name: Check pip-audit
        run: |
          pip-audit -r requirements_test.txt --progress-spinner off --ignore-vuln PYSEC-2022-42969
